@page "/fault/{FaultId:int}"
<DTPageTitle>Fault</DTPageTitle>
@inherits HookComponentBase
@using DashTransit.Core.Application.Commands
@using Newtonsoft.Json
@inject IMediator Mediator
@inject IHxMessengerService Messenger

@code {
    [Parameter]
    public int FaultId { get; set; }

    public Task<Core.Domain.Fault?> FetchFault()
        => this.Mediator.Send(new FaultById(Core.Domain.FaultId.From(FaultId)));

    public Action Resend(AuditId auditId, EndpointId endpointId) => async () =>
    {
        try
        {
            await this.Mediator.Send(new ResendMessage(auditId, endpointId));
            this.Messenger.AddInformation("Resend", $"Message {auditId} Resent");
        }
        catch
        {
            this.Messenger.AddError("Resend", $"Couldn't resend message {auditId}");
        }
    };
}

<FluentLoader Fetch=@FetchFault Dependencies=@(new object[] { FaultId })>
    @if (context is null)
    {
        <p>Message not found</p>
    }
    else
    {
        <div class="d-flex">
            <h3 class="flex-fill" style="word-break: break-all">@context.Exceptions.First().Message</h3>
            <HxButton
                  CssClass="align-self-start"
                  Color="ThemeColor.Primary"
                  Text="Resend"
                  OnValidClick=@Resend(AuditId.From(context.Message!.AuditRecordId), context.ProducedBy) />
        </div>
        <TwoColumnLayout>
            <Left>
                <div>
                    <dl>
                        <DL T="Message Id">
                            <a Href=@($"/message/{context.Message!.AuditRecordId}")>@(context.MessageId)</a>
                        </DL>
                        <DL T="Faulted" D=@(context.Produced) />
                        <DL T="Endpoint" D=@(context.ProducedBy) />
                        <DL T="Exception Type" D=@(context.Exceptions.First().ExceptionType) />
                        <DL T="Source" D=@(context.Exceptions.First().Source) />
                    </dl>
                </div>
            </Left>
            <Right>
                <Code>@context.Exceptions.First().StackTrace</Code>
            </Right>
        </TwoColumnLayout>
    }
</FluentLoader>