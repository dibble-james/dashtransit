@page "/fault"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<FaultsState> State

<FluentToolbar>
    <FluentButton Appearance="@Appearance.Accent" @onclick=@(() => Dispatcher.Dispatch(new FetchData()))><FluentIcon Name="Refresh" /></FluentButton>
</FluentToolbar>

<Loader IsLoading="@State.Value.Loading">
    <FluentDataGrid ColumnDefinitions=Columns RowsData=@State.Value.Faults GridTemplateColumns="auto auto auto 6rem">
        <RowItemTemplate>
            <FluentDataGridRow TItem=LatestFault>
                <FluentDataGridCell GridColumn=1>@context.Produced</FluentDataGridCell>
                <FluentDataGridCell GridColumn=2>@context.ProducedBy</FluentDataGridCell>
                <FluentDataGridCell GridColumn=3>@context.Type</FluentDataGridCell>
                <FluentDataGridCell GridColumn=4>@context.Exception</FluentDataGridCell>
                <FluentDataGridCell GridColumn=5>
                    <FluentAnchor href=@($"fault/{context.Id}")>Details</FluentAnchor>
                </FluentDataGridCell>
            </FluentDataGridRow>
        </RowItemTemplate>
    </FluentDataGrid>
</Loader>


@code {
    private readonly List<ColumnDefinition<LatestFault>> Columns = new List<ColumnDefinition<LatestFault>>
    {
        new ColumnDefinition<LatestFault>("Produced", x => x.Produced),
        new ColumnDefinition<LatestFault>("Produced By", x => x.ProducedBy),
        new ColumnDefinition<LatestFault>("Type", x => x.Type),
        new ColumnDefinition<LatestFault>("Exception", x => x.Exception),
        new ColumnDefinition<LatestFault>("", x => x),
    };
}